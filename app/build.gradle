apply plugin: 'com.android.application'
apply from: '../config/quality.gradle'
apply plugin: 'io.fabric'

android {

    compileSdkVersion projectProperties.compileSdkVersion
    buildToolsVersion projectProperties.buildToolsVersion

    defaultConfig {

        applicationId "org.codedoesgood.androidtemplate"

        minSdkVersion projectProperties.minSdkVersion
        targetSdkVersion projectProperties.targetSdkVersion
        versionCode projectProperties.versionCode
        versionName projectProperties.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [crashlyticsApiKey: project.hasProperty('crashlytics_api_key') ? crashlytics_api_key : System.getenv('crashlytics_api_key') ]

    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    //App Dependencies
    compile "com.android.support:appcompat-v7:$libVersions.android.support"
    compile "com.android.support.constraint:constraint-layout:$libVersions.android.constraintlayout"

    compile "com.jakewharton.timber:timber:$libVersions.timber"

    compile("com.crashlytics.sdk.android:crashlytics:$libVersions.crashlytics") { transitive = true; }

    //Test Dependencies

    testCompile "junit:junit:$testVersions.junit"

    androidTestCompile("com.android.support.test.espresso:espresso-core:$testVersions.espresso", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

afterEvaluate {
    assembleDebug.dependsOn 'checkstyle'
    compileDebugSources.dependsOn 'checkstyle'
}
